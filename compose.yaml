x-loki-logging: &loki-logging
  logging:
    driver: loki
    options:
      loki-url: "http://localhost:3100/loki/api/v1/push"
      loki-retries: "5"

services:
  reservation:
    restart: unless-stopped
    depends_on:
      - database
      - rabbit
    image: tk582186/reservation:latest
    container_name: reservation
    mem_limit: 500M
    <<: *loki-logging
    env_file:
      - ./env/reservation/.env
    volumes:
      - ./logs/reservation:/reservation/logs:rw
    networks:
      - dev

  notification:
    restart: unless-stopped
    depends_on:
      - rabbit
    image: tk582186/notification:latest
    container_name: notification
    mem_limit: 250M
    <<: *loki-logging
    env_file:
      - ./env/notification/.env
    volumes:
      - ./logs/notification:/notification/logs:rw
      - ./config/notification/templates:/opt/config/templates:ro
    networks:
      - dev

  keycloak:
    restart: unless-stopped
    depends_on:
      - database
    container_name: keycloak
    image: bitnami/keycloak:26.1.0
    ports:
      - '8030:8080'
    mem_limit: 500M
    <<: *loki-logging
    env_file:
      - ./env/keycloak/.env
    networks:
      - dev

  database:
    restart: unless-stopped
    container_name: database
    image: bitnami/postgresql:17.4.0
    ports:
      - "5432:5432"
    mem_limit: 100M
    <<: *loki-logging
    env_file:
      - ./env/database/.env
    volumes:
      - db-data:/bitnami/postgresql
    networks:
      - dev

  rabbit:
    restart: unless-stopped
    container_name: rabbit
    image: bitnami/rabbitmq:4.0.6
    ports:
      - "15672:15672"
    mem_limit: 200M
    <<: *loki-logging
    env_file:
      - ./env/rabbit/.env
    networks:
      - dev

  proxy:
    restart: unless-stopped
    image: traefik:v3.3.2
    container_name: proxy
    mem_limit: 100M
    <<: *loki-logging
    ports:
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik/basic:/etc/traefik:ro
      - ./config/traefik/config:/config:ro
      - ./config/traefik/certs:/etc/certs:ro
    networks:
      - dev

  loki:
    image: grafana/loki:latest
    container_name: loki
    ports:
      - "3100:3100"
    networks:
      - dev

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    <<: *loki-logging
    depends_on:
      - loki
    env_file:
      - ./env/grafana/.env
    volumes:
      - ./config/grafana/:/etc/grafana/
      - grafana-data:/var/lib/grafana
    networks:
      - dev
networks:
  dev:
    driver: bridge
volumes:
  grafana-data:
  db-data:
