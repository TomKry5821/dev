services:
  reservation:
    restart: unless-stopped
    depends_on:
      - database
      - rabbit
    image: tk582186/reservation:latest
    container_name: reservation
    env_file:
      - ./env/reservation/.env
    volumes:
      - ./logs/reservation:/reservation/logs:rw
    networks:
      - dev-net

  notification:
    restart: unless-stopped
    depends_on:
      - rabbit
    image: tk582186/notification:latest
    container_name: notification
    env_file:
      - ./env/notification/.env
    volumes:
      - ./logs/notification:/notification/logs:rw
      - ./config/notification/templates:/opt/config/templates:ro
    networks:
      - dev-net

  keycloak:
    restart: unless-stopped
    depends_on:
      - database
    container_name: keycloak
    image: bitnami/keycloak:26.1.0
    ports:
      - '8030:8080'
    env_file:
      - ./env/keycloak/.env
    volumes:
      - ./logs/keycloak:/opt/bitnami/keycloak/data/log:rw
    networks:
      - dev-net

  database:
    restart: unless-stopped
    container_name: database
    image: postgres:17.2
    ports:
      - "5432:5432"
    env_file:
      - ./env/database/.env
    volumes:
      - ./db-data:/bitnami/postgresql:rw
    networks:
      - dev-net

  rabbit:
    restart: unless-stopped
    container_name: rabbit
    image: bitnami/rabbitmq:4.0.6
    ports:
      - "15672:15672"
    env_file:
      - ./env/rabbit/.env
    volumes:
      - ./logs/rabbit:/opt/bitnami/rabbitmq/var/lib/rabbitmq:rw
    networks:
      - dev-net

  proxy:
    restart: unless-stopped
    image: traefik:v3.3.2
    container_name: proxy
    ports:
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./config/traefik/basic:/etc/traefik:ro
      - ./config/traefik/config:/config:ro
      - ./config/traefik/certs:/etc/certs:ro
      - ./logs/traefik:/var/log:rw
    networks:
      - dev-net

  cadvisor:
    restart: unless-stopped
    image: gcr.io/cadvisor/cadvisor:v0.49.1
    container_name: cadvisor
    privileged: true
    ports:
      - "8084:8080"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
      - ./config/cadvisor/admin.htpasswd:/admin.htpasswd
    environment:
      - HTTP_AUTH_FILE=/auth.htpasswd
      - HTTP_AUTH_REALM=localhost
      - CADVISOR_HEALTHCHECK_URL=http://localhost:8080/healthz
    command:
      - "--http_auth_file=/admin.htpasswd"
      - "--http_auth_realm=localhost"
      - "--url_base_prefix=/cadvisor"
    networks:
      - dev-net
networks:
  dev-net:
    driver: bridge
